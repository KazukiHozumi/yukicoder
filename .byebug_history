continue
eval k_possible_point
n
continue
step
s.length
n
s
n
exit
a[(a.index(s[2])-1)%26]
eval s
a[(a.index(s[2])-1)%26]
a[(a.index(s[i])-1)%26]
n
exit
a[(a.index(s[2])+1)%26]
a.index((a.index(s[2])+1)%26)
a.index((a.index(s[2])+i)%26)
a.index((a.index[s[2]]+i)%26)
eval s[2]
eval s
n
exit
s.length
s.index('C')
s.index('B')
n
continue
eval s
n
eval b.size
eval a.size
eval a
b[1]
b[0]
eval b
eval a
eval b
b == AfjfZ
eval b
eval a
eval b
emal b
eval b.class
eval b
n
continue
eval a.class
eval a
n
c
eval a
s
c
s_chars
n
c
s_chars
s_chars.size
n
s_chars.size
n
eval sum
n
c
eval sum
n
continue
eval s
s
eval s
l
eval s
evals
s
n
eval index
s
eval index
s
n
continue
set.find_index('II')
set.find_index('I')
set.find_index(s1)
set.find(s1)
set[s1]
l
eval set[2]
eval set(s1)
eval set.find(s1)
eval set.where(s1)
eval set.include?(s1)
eval set.include(s1)
eval set
l
set
set.find(s1)
eval s1
s
continue
3 1 3
s
exit
list
3 2 3
s
l
eval x
eval s 
x
s
n
eval x
n
1/2
d-10
((d-10)/2+11)%10
n
y_abs
n
eval x_abs
n
eval r
n
eval W
list
eval H
n
s
d3
d2
eval d1
n
q!
n
